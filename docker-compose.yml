services:
  zookeeper:    
    image: wurstmeister/zookeeper:latest    
    container_name: zookeeper    
    ports:      
      - "2181:2181"  

  kafka:    
    image: wurstmeister/kafka:latest    
    container_name: kafka    
    ports:
      - "9092:9092"    
    environment:      
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181    
    volumes:      
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - toeicdoit-net
    hostname: kafka

  mysql:
    container_name: mysql
    image: mysql:latest
    volumes:
      - ./mysql/demo/etc/mysql/conf.d:/etc/mysql/conf.d:ro
      - ./mysql/demo/var/lib/mysql:/var/lib/mysql
      - ./mysql/demo/var/log/mysql:/var/log/mysql
    environment:
      - MYSQL_DATABASE=toeicdoit_db
      - MYSQL_ROOT_PASSWORD=sitetoeicdoit
      - MYSQL_ROOT_HOST=%
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    ports:
      - "3306:3306"
    restart: always
    networks:
      - toeicdoit-net
    hostname: mysql
    
  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - 27017:27017
    volumes:
      - ./mongodb:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=sitetoeicdoit
      - MONGO_INITDB_DATABASE=toeicdoit_db
    restart: always
    networks:
      - toeicdoit-net
    hostname: mongodb

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379
    command: redis-server --requirepass sitetoeicdoit
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    labels:
      - "name=redis"
      - "mode=standalone"
    restart: always
    networks:
      - toeicdoit-net
    hostname: redis

  config:
    build:
      context: config-service
      dockerfile: Dockerfile
    image: toeicdoit/config:latest
    container_name: config
    ports:
    - 8888:8888
    networks:
      - toeicdoit-net
    hostname: config

  eureka:
    build:
      context: eureka-service
      dockerfile: Dockerfile
    image: toeicdoit/eureka:latest
    container_name: eureka
    ports:
      - 8761:8761
    networks:
      - toeicdoit-net
    depends_on:
      - config
    hostname: eureka

  gateway:
    build:
      context: gateway-service
      dockerfile: Dockerfile
    image: toeicdoit/gateway:latest
    container_name: gateway
    ports:
      - 8000:8000
    networks:
      - toeicdoit-net
    depends_on:
      - eureka
      - redis
    hostname: gateway

  # user:
  #   build:
  #     context: user-service
  #     dockerfile: Dockerfile
  #   image: toeicdoit/user:latest
  #   container_name: user
  #   ports:
  #   - 8091:8091
  #   networks:
  #     - toeicdoit-net
  #   depends_on:
  #     - eureka
  #     - mysql
  #     - mongodb
  #   hostname: user

  # chat:
  #   build:
  #     context: chat-service
  #     dockerfile: Dockerfile
  #   image: toeicdoit/chat:latest
  #   container_name: chat
  #   ports:
  #   - 8088:8088
  #   networks:
  #     - toeicdoit-net
  #   depends_on:
  #     - eureka
  #     - mongodb
  #     - kafka
  #   hostname: chat

  # toeic:
  #   build:
  #     context: toeic-service
  #     dockerfile: Dockerfile
  #   image: toeicdoit/toeic:latest
  #   container_name: toeic
  #   ports:
  #   - 8089:8089
  #   networks:
  #     - toeicdoit-net
  #   depends_on:
  #     - user
  #   hostname: toeic

  # tx:
  #   build:
  #     context: tx-service
  #     dockerfile: Dockerfile
  #   image: toeicdoit/tx:latest
  #   container_name: tx
  #   ports:
  #   - 8090:8090
  #   networks:
  #     - toeicdoit-net
  #   depends_on:
  #     - user
  #   hostname: tx


networks:
  toeicdoit-net:
    driver: bridge