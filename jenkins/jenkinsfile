pipeline {
    agent any
	
    environment { 
        PUSH_VERSION = "latest"
        COMPOSE_TAGNAME = 'toeicdoit'
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        NKS_TOKEN_CREDENTIALS = credentials("nks-token")
        KUBECONFIG_CREDENTIALS = credentials("kubeconfig")
        services = "gateway,eureka,user,chat,tx,toeic"
    }
    
    stages {
        stage('Github clone') {
            steps {
                git branch: "main", credentialsId: 'github-token', url: "https://github.com/6Whistle/TOEICDOIT_Jenkins_K8S_Publish.git"
            }
        }
        
        stage("Docker Login") {
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
            }
        }

        stage("Java Build") {
            steps {
                script {
                    sh "chmod +x ./gradlew"
                    sh "./gradlew clean build"
                }
            }
        }
                
        stage("Docker Image Remove") {
            steps {
                script {
                    services.split(',').each { service ->
                        sh "docker rmi -f $COMPOSE_TAGNAME/${service}:$PUSH_VERSION"
                        sh "docker rmi -f $DOCKERHUB_CREDENTIALS_USR/${service}:$PUSH_VERSION"
                    }
                }
            }
        }
        
        stage("Docker Image Build") {
            steps {
                sh "docker compose build"
            }
        }
        
        stage("Docker Image Tag") {
            steps {
                script {
                    services.split(',').each { service ->
                        sh "docker tag $COMPOSE_TAGNAME/${service}:$PUSH_VERSION $DOCKERHUB_CREDENTIALS_USR/$service:$PUSH_VERSION"
                    }
                }
            }
        }
        
        stage("Docker Push") {
            steps {
                script {
                    services.split(',').each { service ->
                        sh "docker push $DOCKERHUB_CREDENTIALS_USR/${service}:$PUSH_VERSION"
                    }
                }
            }
        }
        
        stage('Apply Kubernetes files') {
            steps {
                withKubeConfig([credentialsId: 'kubeconfig']) {
                    sh "kubectl --kubeconfig=$HOME/.ncloud/kubeconfig.yml get nodes"
                    sh 'kubectl --kubeconfig=$HOME/.ncloud/kubeconfig.yml apply -f ./k8s/toeicdoit-deployment.yml'
                    sh 'kubectl --kubeconfig=$HOME/.ncloud/kubeconfig.yml apply -f ./k8s/toeicdoit-service.yml'
                }
            }
        }
    }
}